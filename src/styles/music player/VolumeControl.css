.volume-panel {
  background-color: var(--simple-button-bg-color);
  border: var(--simple-button-border);

  width: 180px;

  padding: 10px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

input[type="range"] {
  height: auto;
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  background-color: var(--simple-button-bg-color);
}

input[type="range"]:focus {
  outline: none;
}

input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0px 0px 0px #000000;
  background: #c5c5c5;
  border-radius: 10px;
  border: 0px solid #010101;
}

input[type="range"]::-webkit-slider-thumb {
  box-shadow: 0px 0px 0px #000031;
  border: 3px solid #4cc9f0;
  height: 20px;
  width: 20px;
  border-radius: 11px;
  background: #4361ee;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -9px;
}

input[type="range"]:focus::-webkit-slider-runnable-track {
  background: #c5c5c5;
}

input[type="range"]::-moz-range-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0px 0px 0px #000000;
  background: #c5c5c5;
  border-radius: 10px;
  border: 0px solid #010101;
}

input[type="range"]::-moz-range-thumb {
  box-shadow: 0px 0px 0px #000031;
  border: 3px solid #4cc9f0;
  height: 20px;
  width: 20px;
  border-radius: 11px;
  background: #4361ee;
  cursor: pointer;
}

input[type="range"]::-ms-track {
  width: 100%;
  height: 5px;
  cursor: pointer;
  transition: all 0.2s;
  background: transparent;
  border-color: transparent;
  color: transparent;
}

input[type="range"]::-ms-fill-lower {
  background: #c5c5c5;
  border: 0px solid #010101;
  border-radius: 20px;
  box-shadow: 0px 0px 0px #000000;
}

input[type="range"]::-ms-fill-upper {
  background: #c5c5c5;
  border: 0px solid #010101;
  border-radius: 20px;
  box-shadow: 0px 0px 0px #000000;
}

input[type="range"]::-ms-thumb {
  margin-top: 1px;
  box-shadow: 0px 0px 0px #000031;
  border: 3px solid #4cc9f0;
  height: 20px;
  width: 20px;
  border-radius: 11px;
  background: #4361ee;
  cursor: pointer;
}

input[type="range"]:focus::-ms-fill-lower {
  background: #c5c5c5;
}

input[type="range"]:focus::-ms-fill-upper {
  background: #c5c5c5;
}

.dialog-container {
  width: 100%;
  height: 100%;

  display: flex;
  align-items: center;
  justify-content: center;

  background-color: red;

  z-index: 999999999;

  position: relative;
  left: 100%;
  bottom: 10px;
}

dialog {
  height: auto;
  width: auto;

  display: flex;
  align-items: center;
  justify-content: center;

  place-self: flex-end;

  border-radius: 15px;
  border: 1px solid #c5c5c5;
}

/*   Open state of the dialog  */
dialog[open] {
  pointer-events: all;
  opacity: 1;
  transform: scale(1);
}

/*   Closed state of the dialog   */
dialog {
  pointer-events: none;
  opacity: 0;
  transform: scale(0.9);

  transition: opacity 0.2s ease-out, transform 0.2s ease-out,
    overlay 0.2s ease-out allow-discrete, display 0.2s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scale(1);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: display 0.2s allow-discrete, overlay 0.2s allow-discrete,
    background-color 0.2s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}
