@font-face {
  font-family: "Plus Jakarta Sans";
  src: url("assets/PlusJakartaSans-Regular.ttf");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

:root {
  --page-text-color: white;
  --page-bg-color: #161b22;

  --song-list-item-hover-color: #343a40;
  --song-list-odd-item-bg-color: #1e2329;
  --song-list-border: 1px solid #2d3137;

  --music-player-bg-color: #1e2329;
  --music-player-play-button: #22272d;
  --music-player-artist-album: #c5c5c5;

  --lyrics-panel-bg-color: rgba(0, 0, 0, 0.6);

  --setings-item-bg-color: #2d3137;

  --simple-button-text-color: #b2b6ff;
  --simple-button-svg-icon-color: white;
  --simple-button-bg-color: #161b22;
  --simple-button-hover-color: drop-shadow(0 0 8px #8b91ff);
  --simple-button-border: 1px solid #30363d;
}

.light-mode {
  --page-text-color: black;
  --page-bg-color: #f8f9fa;

  --song-list-item-hover-color: #adb5bd;
  --song-list-odd-item-bg-color: #e9ecef;
  --song-list-border: 1px solid #adb5bd;

  --music-player-bg-color: #e9ecef;
  --music-player-play-button: #f8f9fa;
  --music-player-artist-album: #6c757d;

  --lyrics-panel-bg-color: rgba(255, 255, 255, 0.75);

  --setings-item-bg-color: #dee2e6;

  --simple-button-text-color: black;
  --simple-button-svg-icon-color: black;
  --simple-button-bg-color: #fff;
  --simple-button-hover-color: drop-shadow(0 0 8px #8b91ff);
  --simple-button-border: 1px solid #dbdbdb;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Plus Jakarta Sans", Inter, Avenir, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;

  color: var(--page-text-color);
  background-color: var(--page-bg-color);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

*::-webkit-scrollbar {
  width: 5px;
}

*::-webkit-scrollbar-thumb {
  background-color: #8d99ae;

  border-radius: 5px;
  border: 1px solid #8d99ae;
}

hr {
  background-color: #22272d;

  height: 3px;
  min-height: 3px;
  width: 99%;

  margin: 0 auto;
  border: none;
  border-radius: 20px;
}

svg {
  min-width: 16px;
  fill: var(--simple-button-svg-icon-color);
}

select {
  cursor: pointer;

  width: fit-content;

  background-color: var(--simple-button-bg-color);
  color: var(--page-text-color);

  border: var(--simple-button-border);
  border-radius: 5px;

  padding: 10px 10px;
}

select:hover {
  filter: var(--simple-button-hover-color);
}

/*   Open state of the dialog  */
dialog[open] {
  pointer-events: all;
  opacity: 1;
  transform: scale(1);
}

/*   Closed state of the dialog   */
dialog {
  pointer-events: none;
  opacity: 0;
  transform: scale(0.9);

  transition: opacity 0.2s ease-out, transform 0.2s ease-out,
    overlay 0.2s ease-out allow-discrete, display 0.2s ease-out allow-discrete;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scale(1);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: display 0.2s allow-discrete, overlay 0.2s allow-discrete,
    background-color 0.2s;
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

dialog::backdrop {
  background: rgb(0, 81, 156);
  background: linear-gradient(
    180deg,
    rgba(0, 81, 156, 1) 0%,
    rgba(0, 29, 61, 1) 100%
  );
  opacity: 0.75;
}

.simple-dialog {
  height: auto;
  width: auto;

  place-self: center;

  padding: 15px;

  background-color: var(--simple-button-bg-color);

  color: var(--app-color);

  border: var(--simple-button-border);
  border-radius: 15px;
}

.flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.centered {
  align-items: center;
  justify-content: center;
}
